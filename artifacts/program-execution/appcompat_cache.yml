title: "Application Compatibility Cache (ShimCache)"
category: "program-execution"
description: "Application execution tracking with file paths, timestamps, and execution indicators across Windows versions"

paths:
  - "HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCompatCache"

details:
  what: |
    Windows Application Compatibility Cache (ShimCache) tracks executable files that have been run
    or accessed on the system. Stores file paths, file sizes, last modification times, and execution 
    flags to determine if compatibility shims need to be applied for legacy applications. The cache
    helps Windows decide whether to apply compatibility fixes when applications are executed.

  forensic_value: |
    Provides critical evidence of program execution even when other artifacts are missing or deleted.
    Shows both executed and accessed executables with precise timestamps. Survives prefetch deletion,
    log clearing, and basic system cleaning. Essential for malware analysis, timeline reconstruction,
    and proving program execution. Can detect renamed executables and portable applications.

  structure: |
    Binary data structure containing arrays of file entries. Each entry includes Unicode file path,
    file size (bytes), last modification time (FILETIME), and execution flag. Structure varies 
    significantly between Windows versions: XP uses different format than Win7, Win8+ uses 
    compressed format. Entries stored in chronological order of access/execution.

  examples:
    - "File: C:\\Windows\\System32\\cmd.exe"
    - "Size: 289,792 bytes"
    - "Modified: 2024-01-15 14:30:25 UTC"
    - "Executed: True"
    - "Malware: C:\\Users\\user\\Desktop\\suspicious.exe"
    - "Portable: D:\\PortableApps\\tool.exe"
    - "Network: \\\\server\\share\\application.exe"
    - "Path Format: \\??\\C:\\Temp\\malware.exe"

  tools:
    - name: "AppCompatCacheParser"
      url: "https://github.com/EricZimmerman/AppCompatCacheParser"
      description: "Eric Zimmerman's comprehensive ShimCache parser with timeline output"
    - name: "Registry Explorer"
      url: "https://ericzimmerman.github.io/#!index.md"
      description: "Advanced registry browser with built-in ShimCache parsing"
    - name: "ShimCacheParser"
      url: "https://github.com/mandiant/ShimCacheParser"
      description: "Mandiant's Python-based ShimCache analysis tool"
    - name: "RegRipper"
      url: "https://github.com/keydet89/RegRipper3.0"
      description: "Registry analysis framework with shimcache.pl plugin"
    - name: "KAPE"
      url: "https://www.kroll.com/en/services/cyber-risk/investigate-and-respond/kroll-artifact-parser-extractor-kape"
      description: "Artifact collection framework with ShimCache modules"

limitations:
  - "Does NOT prove program execution - only shows file was accessed for compatibility analysis"
  - "Triggered by file operations: copy, move, scan, or simple existence checks"
  - "Antivirus and security tools populate cache without user execution"
  - "File browsing and preview generation can create entries"
  - "Network file access may create entries without local execution"
  - "System maintenance and indexing operations populate cache"
  - "Execution flag varies by Windows version and may not be reliable"
  - "Cannot distinguish between successful execution vs. failed launch attempts"

correlation:
  required_for_definitive_execution_proof:
    - "Windows Event Logs (Process Creation 4688, Process Termination 4689)"
    - "Prefetch files (.pf) with execution counters and file references"
    - "EDR/monitoring tool process execution logs"
    - "Application event logs showing successful startup"
    
  strengthens_evidence:
    - "AmCache entries with matching SHA1 hashes and metadata"
    - "UserAssist showing user-initiated launches"
    - "Recent documents created by the application"
    - "Registry keys modified by application runtime"
    - "Network connections initiated by the process"
    - "File modifications with matching timestamps"

metadata:
  windows_versions:
    - "Windows XP"
    - "Windows Vista"
    - "Windows 7"
    - "Windows 8"
    - "Windows 8.1"
    - "Windows 10"
    - "Windows 11"
    - "Windows Server 2003"
    - "Windows Server 2008"
    - "Windows Server 2012"
    - "Windows Server 2016"
    - "Windows Server 2019"
    - "Windows Server 2022"

  introduced: "Windows XP"
  criticality: "high"

  investigation_types:
    - "malware-analysis"
    - "timeline-analysis"
    - "incident-response"
    - "behavioral-analysis"

  tags:
    - "execution"
    - "shimcache"
    - "timeline"
    - "malware-analysis"
    - "application-tracking"
    - "file-execution"
    - "compatibility-cache"
    - "program-evidence"

  references:
    - title: "Application Compatibility Cache"
      url: "https://docs.microsoft.com/en-us/windows/win32/devnotes/application-compatibility-cache"
      type: "official"
    - title: "Leveraging the Application Compatibility Cache in Forensic Investigations"
      url: "https://www.mandiant.com/resources/blog/caching-out-the-val"
      type: "research"
    - title: "Windows ShimCache Forensics"
      url: "https://www.sans.org/blog/computer-forensic-artifacts-windows-7-shimcache/"
      type: "research"
    - title: "Registry Analysis: ShimCache"
      url: "https://www.forensicfocus.com/articles/registry-analysis-application-compatibility-cache/"
      type: "research"

  retention:
    default_location: "SYSTEM registry hive"
    persistence: "Survives reboots, system cleaning, and prefetch deletion"
    volatility: "Limited cache size may cause older entries to be overwritten"

  related_artifacts:
    - "amcache"
    - "userassist"
    - "muicache"
    - "prefetch_settings"
    - "recent_docs"

author:
  name: "Tonmoy Jitu"
  github: "tonmoy0010"
  x: "tonmoy0010"

contribution:
  date_added: "2025-01-15"
  last_updated: "2025-01-15"
  version: "3.0"
